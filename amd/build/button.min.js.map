{"version":3,"sources":["../src/button.js"],"names":["selectors","regions","feedbacktext","emailaddress","includescreenshot","like","ajaxing","form","actions","dislike","classes","hidden","getFormValues","modal","message","querySelector","value","show","classList","remove","add","modalFormEvents","content","addEventListener","e","preventDefault","showWarning","msg","Templates","render","closebutton","iswarning","then","html","js","prependNodeContents","showModal","target","externallinks","saveButtonText","Str","get_strings","key","component","langStrings","modalTitle","ModalFactory","create","title","body","JSON","parse","type","types","SAVE_CANCEL","large","done","setSaveButtonText","modalroot","getRoot","on","ModalEvents","save","sendFeedback","result","success","destroy","warning","catch","Notification","exception","args","promise","Ajax","call","methodname","fail","init","getAttribute"],"mappings":"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","sourcesContent":["/**\n * This file is part of Moodle - http://moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @package   image_editable\n * @copyright 2020 Bas Brands\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport * as Str from 'core/str';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\nimport ModalEvents from 'core/modal_events';\nimport ModalFactory from 'core/modal_factory';\n\n\nconst selectors = {\n    regions: {\n        feedbacktext: '[data-region=\"feedbacktext\"]',\n        emailaddress: '[data-region=\"emailaddress\"]',\n        includescreenshot: '[data-region=\"includescreenshot\"]',\n        like: '[data-region=\"like\"]',\n        ajaxing: '[data-region=\"ajaxing\"]',\n        form: '[data-region=\"form\"]'\n    },\n    actions: {\n        like: '[data-action=\"like\"]',\n        dislike: '[data-action=\"dislike\"]'\n    },\n    classes: {\n        hidden: 'd-none',\n    }\n};\n\nconst getFormValues = (modal) => {\n    const form = modal[0];\n    const message = form.querySelector(selectors.regions.feedbacktext);\n    const emailaddress = form.querySelector(selectors.regions.emailaddress);\n    const includescreenshot = form.querySelector(selectors.regions.includescreenshot);\n    const like = form.querySelector(selectors.regions.like);\n\n    return {\n        'message': message.value,\n        'emailaddress' : emailaddress.value,\n        'includescreenshot' : includescreenshot.value,\n        'like' : like.value\n    };\n};\n\n\n/**\n * Show a spinner to indicate the form is waiting for the webservice.\n * @param  {HTMLElement} target DOM node of the editable image\n * @param  {Bool} show.\n */\nconst ajaxing = (modal, show) => {\n    const form = modal[0];\n    const ajaxing = form.querySelector(selectors.regions.ajaxing);\n    if (show) {\n        ajaxing.classList.remove(selectors.classes.hidden);\n    } else {\n        ajaxing.classList.add(selectors.classes.hidden);\n    }\n};\n\n/**\n * Show a spinner to indicate the form is waiting for the webservice.\n * @param  {HTMLElement} target DOM node of the editable image\n * @param  {Bool} show.\n */\nconst modalFormEvents = (modal) => {\n    const content = modal[0];\n    const like = content.querySelector(selectors.actions.like);\n    const dislike = content.querySelector(selectors.actions.dislike);\n    const form = content.querySelector(selectors.regions.form);\n\n    like.addEventListener('click', function(e) {\n        form.classList.remove(selectors.classes.hidden);\n        content.classList.remove('hidesend');\n        e.preventDefault();\n    });\n\n    dislike.addEventListener('click', function(e) {\n        form.classList.remove(selectors.classes.hidden);\n        content.classList.remove('hidesend');\n        e.preventDefault();\n    });\n};\n\n/**\n * Show an alert on the form.\n * @param  {HTMLElement} target DOM node of the editable image\n * @param  {String} msg Message to show in the alert\n */\nconst showWarning = (modal, msg) => {\n    const form = modal[0].querySelector('form');\n    return Templates.render('core/notification', {\n        message: msg,\n        closebutton: true,\n        iswarning: true\n    }).then(function(html, js) {\n        Templates.prependNodeContents(form, html, js);\n    });\n};\n\n/**\n * Show an alert on the image.\n * @param  {HTMLElement} target DOM node of the editable image\n * @param  {String} msg Message to show in the alert\n */\nconst showModal = (target, externallinks) => {\n    const strings = [\n        {\n            key: 'yourfeedback',\n            component: 'local_sitefeedback'\n        },\n        {\n            key: 'send',\n            component: 'core_message'\n        },\n    ];\n\n    let saveButtonText = '';\n    Str.get_strings(strings).then(function(langStrings) {\n        const modalTitle = langStrings[0];\n        saveButtonText = langStrings[1];\n\n        return ModalFactory.create({\n            title: modalTitle,\n            body: Templates.render('local_sitefeedback/feedbackform',\n                {'externallinks':\n                    JSON.parse(externallinks)\n                }\n            ),\n            type: ModalFactory.types.SAVE_CANCEL,\n            large: true\n        });\n    }).done(function(modal) {\n        modal.setSaveButtonText(saveButtonText);\n\n        const modalroot = modal.getRoot();\n\n        modalFormEvents(modalroot);\n\n        modalroot[0].classList.add('hidesend');\n\n        modalroot.on(ModalEvents.save, function(e) {\n            ajaxing(modalroot, true);\n            e.preventDefault();\n            // The action is now confirmed, sending an action for it.\n            sendFeedback(getFormValues(modalroot)).then(function(result) {\n                if (result.success) {\n                    modal.destroy();\n                } else {\n                    showWarning(modalroot, result.warning);\n                }\n                ajaxing(modalroot, false);\n            });\n        });\n\n        // Handle hidden event.\n        modalroot.on(ModalEvents.hidden, function() {\n            // Destroy when hidden.\n            modal.destroy();\n        });\n\n        // Show the modal.\n        modal.show();\n\n        return;\n    }).catch(Notification.exception);\n};\n\n/**\n * Send a feedback message\n * @param {Object} args The request arguments\n * @return {Promise} Resolved with a promise.\n */\nconst sendFeedback = (args) => {\n    const request = {\n        methodname: 'local_sitefeedback_sendmessage',\n        args: args\n    };\n\n    let promise = Ajax.call([request])[0]\n        .fail(Notification.exception);\n\n    return promise;\n};\n\n/**\n * Initiate the editable image controls.\n *\n * @param {HTMLElement} target DOM node of the button\n * @param {int} siteMaxBytes\n */\nexport const init = (target) => {\n\n    const externallinks = target.getAttribute('data-externallinks');\n    // Actions on cropping\n    target.addEventListener('click', (e) => {\n        showModal(target, externallinks);\n        e.preventDefault();\n    });\n\n    target.classList.add('js-enabled');\n};\n"],"file":"button.min.js"}